[package]
name = "rs-hardware"
version = "1.0.0"
edition = "2021"
authors = ["Adam Hott"]

[dependencies]
panic-halt = "0.2.0"
embedded-hal = "1.0.*"
defmt = "0.3.0"
defmt-rtt = "0.4"
rtt-target = "0.6.0"
paste = "1.0.0"
bilge = { version = "0.2.0", default-features = false }
bytemuck = { version = "1.16.0", features = ["derive"] }
embedded-hal-async = { version = "1.0.0", optional = true }
embassy-stm32 = { version = "0.1.0", features = ["defmt", "stm32h753zi", "time-driver-tim2", "exti", "memory-x", "unstable-pac", "chrono"] }
embassy-sync = { version = "0.5.0", features = ["defmt"] }
embassy-executor = { version = "0.5.0", features = ["task-arena-size-32768", "arch-cortex-m", "executor-thread", "executor-interrupt", "defmt", "integrated-timers"] }
embassy-time = { version = "0.3.0", features = ["defmt", "defmt-timestamp-uptime", "tick-hz-32_768"] }
embassy-net = { version = "0.4.0", features = ["defmt", "tcp", "dhcpv4", "medium-ethernet", "proto-ipv6", "dns"] }
embassy-usb = { version = "0.2.0", features = ["defmt"] }
embassy-futures = "0.1.0" 
icm426xx = { path = "src/drivers/icm426xx", features = ["async"] }




cortex-m = { version = "0.7.6", features = ["inline-asm", "critical-section-single-core"] }
cortex-m-rt = "0.7.0"
embedded-nal-async = { version = "0.7.1" }
embedded-io-async = { version = "0.6.1" }
panic-probe = { version = "0.3", features = ["print-defmt"] }
heapless = { version = "0.8", default-features = false }
rand_core = "0.6.3"
critical-section = "1.1"
micromath = "2.0.0"
stm32-fmc = "0.3.0"
embedded-storage = "0.3.1"
static_cell = "2"
chrono = { version = "^0.4", default-features = false }

[dev-dependencies]
embedded-hal-mock = { version = "0.11.*", features = ["embedded-hal-async"] }
embedded-hal-bus = { version = "0.2.*", features = ["async"] }
async-std = { version = "1.12.0", features = ["attributes"] }

[features]
default = []
async = ["dep:embedded-hal-async"]
blocking = []

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3 # <-
overflow-checks = true # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3 # <-
overflow-checks = false # <-
